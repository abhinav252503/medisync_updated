{
  "meta": {
    "project": "Patient-Doctor Interaction Platform",
    "date": "2025-07-29",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "A comprehensive web platform designed to facilitate secure and efficient interactions between patients and doctors. Features include patient and doctor authentication with OTP, dashboards for managing medical records and consultations, AI-driven symptom checking, emergency support locating nearby hospitals, and consent-driven access control.",
  "core_goals": [
    "Enable secure patient and doctor authentication with OTP verification.",
    "Provide intuitive dashboards for patients to view medical data and for doctors to manage consultations.",
    "Facilitate creation and management of medical and consultation records by doctors.",
    "Implement AI-powered symptom checker chatbot to assist patients.",
    "Ensure patient consent is obtained before doctors access sensitive records.",
    "Offer emergency support features to locate nearby hospitals quickly.",
    "Maintain clear logs and histories of access to patient records for transparency.",
    "Support location selection for doctors to contextualize their practice environment."
  ],
  "key_features": [
    "Patient Authentication Modal with OTP login and registration.",
    "Doctor Registration and Login with OTP verification.",
    "Patient Dashboard showing personal info, medical records, pathology reports, and access logs.",
    "Doctor Dashboard presenting patient records and consultation management.",
    "AI Symptom Checker chat interface for interactive patient support.",
    "Emergency Support locating nearby hospitals for urgent care.",
    "Patient Access Consent process for doctors to request permissions.",
    "New Consultation Record creation and saving by doctors.",
    "Access Logs and History views for transparency of record access.",
    "Location Selection for doctors prior to accessing patient records.",
    "Protected Routes ensuring secure access to patient and doctor functionalities.",
    "Reusable UI components like Sidebar Navigation, Step Indicators, and Fancy Buttons with animations."
  ],
  "user_flow_summary": [
    "Patient registers or logs in via OTP-enabled authentication modal.",
    "After login, patient accesses dashboard to view medical records, reports, and access logs.",
    "Patient interacts with AI Symptom Checker chatbot for symptom insights.",
    "Patient uses Emergency Support to find nearby hospitals in urgent situations.",
    "Doctor registers or logs in using OTP verification.",
    "Doctor selects practice location before accessing patient records.",
    "Doctor requests patient consent to view records where necessary.",
    "Doctor navigates dashboard to access patient medical histories and reports.",
    "Doctor creates new consultation records and saves them via the platform.",
    "Both users experience protected routes guarding sensitive data and smooth sidebar navigation."
  ],
  "validation_criteria": [
    "User authentication successfully validates OTPs and prevents unauthorized access.",
    "Patient dashboard accurately displays up-to-date medical records, pathology reports, and access logs.",
    "Doctor dashboard correctly lists patient records and supports record navigation.",
    "AI Symptom Checker responds contextually and maintains a conversational interface.",
    "Emergency Support accurately locates and lists nearby hospitals based on user location.",
    "Consent requests by doctors are recorded and must be approved before access is granted.",
    "New consultation records created by doctors are saved and reflected in patient data.",
    "Access logs for patient records are comprehensive and accessible to patients and doctors.",
    "Protected routes prevent unauthorized users from accessing dashboards and sensitive pages.",
    "UI components like modals, buttons, and navigation respond smoothly and maintain good accessibility standards."
  ],
  "code_summary": {
    "tech_stack": [
      "JavaScript",
      "React",
      "React Router",
      "Tailwind CSS",
      "Zustand",
      "Framer Motion",
      "@headlessui/react",
      "@heroicons/react",
      "Axios"
    ],
    "features": [
      {
        "name": "Patient Authentication Modal",
        "description": "Handles patient login and registration with OTP verification.",
        "files": [
          "src/pages/patient/PatientAuthModal.js"
        ]
      },
      {
        "name": "Patient Dashboard",
        "description": "Displays patient info, medical records, pathology reports, and access logs.",
        "files": [
          "src/pages/patient/PatientDashboard.js"
        ]
      },
      {
        "name": "Patient Medical Records",
        "description": "Shows a table of patient medical records fetched from mock API.",
        "files": [
          "src/pages/patient/Records.js"
        ]
      },
      {
        "name": "Patient Pathology Reports",
        "description": "Displays pathology/lab reports for the patient.",
        "files": [
          "src/pages/patient/Reports.js"
        ]
      },
      {
        "name": "Patient Access Logs",
        "description": "Shows a log of who accessed the patient's records.",
        "files": [
          "src/pages/patient/AccessLogs.js"
        ]
      },
      {
        "name": "AI Symptom Checker",
        "description": "Chat interface for patients to interact with an AI bot.",
        "files": [
          "src/pages/patient/AIChat.js",
          "src/components/ChatWidget.js"
        ]
      },
      {
        "name": "Emergency Support",
        "description": "Locates and lists nearby hospitals for patients in emergencies.",
        "files": [
          "src/pages/patient/Emergency.js"
        ]
      },
      {
        "name": "Doctor Registration",
        "description": "Handles doctor registration and OTP verification.",
        "files": [
          "src/pages/doctor/Register.js"
        ]
      },
      {
        "name": "Doctor Login",
        "description": "Handles doctor login with OTP verification.",
        "files": [
          "src/pages/doctor/Login.js"
        ]
      },
      {
        "name": "Doctor Dashboard",
        "description": "Displays patient records for the doctor and allows navigation to record details.",
        "files": [
          "src/pages/doctor/Dashboard.js"
        ]
      },
      {
        "name": "New Consultation Record",
        "description": "Allows doctors to create and save new consultation records for patients.",
        "files": [
          "src/pages/doctor/NewRecord.js"
        ]
      },
      {
        "name": "Doctor Access History",
        "description": "Shows a history of patient record accesses by the doctor.",
        "files": [
          "src/pages/doctor/AccessHistory.js"
        ]
      },
      {
        "name": "Patient Access Consent",
        "description": "Allows doctors to request patient consent for accessing records.",
        "files": [
          "src/pages/doctor/PatientAccess.js"
        ]
      },
      {
        "name": "Location Selection",
        "description": "Lets doctors select their practice location before accessing patient records.",
        "files": [
          "src/pages/doctor/LocationSelection.js"
        ]
      },
      {
        "name": "Home Page",
        "description": "Landing page with navigation for patient and doctor login.",
        "files": [
          "src/pages/home_page_ui.js"
        ]
      },
      {
        "name": "Protected Route",
        "description": "Route guard for patient and doctor protected routes.",
        "files": [
          "src/components/ProtectedRoute.js"
        ]
      },
      {
        "name": "Sidebar Navigation (Shared)",
        "description": "Sidebar navigation for patient and doctor dashboards.",
        "files": [
          "src/components/SidebarNav.js",
          "src/components/doctor/SidebarNav.js"
        ]
      },
      {
        "name": "Step Indicator",
        "description": "Step progress indicator for multi-step doctor flows.",
        "files": [
          "src/components/doctor/StepIndicator.js"
        ]
      },
      {
        "name": "Fancy Button",
        "description": "Reusable animated button with loading spinner.",
        "files": [
          "src/components/FancyButton.js"
        ]
      },
      {
        "name": "State Management (Zustand)",
        "description": "Global state for user and doctor using Zustand stores.",
        "files": [
          "src/store/user_store.js",
          "src/store/useDoctorStore.js"
        ]
      },
      {
        "name": "Mock API Services",
        "description": "Mocked API endpoints for patient and doctor workflows.",
        "files": [
          "src/services/mockApi.js",
          "src/services/doctorApi.js"
        ]
      }
    ]
  }
}
