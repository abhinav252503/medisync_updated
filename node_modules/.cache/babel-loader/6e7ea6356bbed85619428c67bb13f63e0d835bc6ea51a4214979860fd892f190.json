{"ast":null,"code":"// // // File: src/pages/doctor/Login.js\n// // import React, { useState } from \"react\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import StepIndicator from \"../../components/doctor/StepIndicator\";\n// // import FancyButton from \"../../components/FancyButton\";\n// // import { sendDoctorOtp, verifyDoctorOtp } from \"../../services/doctorApi\";\n// // import { useDoctorStore } from \"../../store/useDoctorStore\";\n\n// // export default function DoctorLogin() {\n// //   const navigate = useNavigate();\n// //   const setDoctor = useDoctorStore((s) => s.setDoctor);\n\n// //   const [step, setStep] = useState(1);\n// //   const [doctorId, setDoctorId] = useState(\"\");\n// //   const [otp, setOtp] = useState(\"\");\n// //   const [loading, setLoading] = useState(false);\n\n// //   const handleNext = async () => {\n// //     setLoading(true);\n// //     try {\n// //       if (step === 1) {\n// //         await sendDoctorOtp(doctorId);\n// //         setStep(2);\n// //       } else {\n// //         const { doctor } = await verifyDoctorOtp(doctorId, otp);\n// //         setDoctor(doctor);\n// //         navigate(\"/doctor/location\");\n// //       }\n// //     } catch {\n// //       // show error toast...\n// //       alert(\"Oops! Something went wrong.\");\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-white flex items-center justify-center p-4\">\n// //       <div className=\"w-full max-w-md bg-white rounded-2xl shadow-xl p-8 space-y-6 relative overflow-hidden\">\n// //         <StepIndicator current={step} />\n// //         <h1 className=\"text-3xl font-bold text-center text-gray-800\">\n// //           {step === 1 ? \"Doctor Login\" : \"Verify OTP\"}\n// //         </h1>\n\n// //         {step === 1 ? (\n// //           <input\n// //             type=\"text\"\n// //             placeholder=\"Enter Doctor ID\"\n// //             value={doctorId}\n// //             onChange={(e) => setDoctorId(e.target.value)}\n// //             className=\"w-full border-2 border-gray-200 rounded-lg px-4 py-2 focus:border-teal-500 focus:ring-0 transition\"\n// //           />\n// //         ) : (\n// //           <input\n// //             type=\"text\"\n// //             placeholder=\"Enter 6-digit OTP\"\n// //             value={otp}\n// //             onChange={(e) => setOtp(e.target.value)}\n// //             className=\"w-full border-2 border-gray-200 rounded-lg px-4 py-2 focus:border-teal-500 focus:ring-0 transition\"\n// //           />\n// //         )}\n\n// //         <FancyButton loading={loading} onClick={handleNext}>\n// //           {step === 1 ? \"Get OTP\" : \"Verify & Continue\"}\n// //         </FancyButton>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n// // File: src/pages/doctor/Login.js\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { sendDoctorOtp, verifyDoctorOtp } from '../../services/doctorApi';\n// import StepIndicator from '../../components/doctor/StepIndicator';\n\n// export default function DoctorLogin() {\n//   const navigate = useNavigate();\n\n//   const [doctorId, setDoctorId] = useState('');\n//   const [otp, setOtp] = useState('');\n//   const [step, setStep] = useState(1);\n//   const [loading, setLoading] = useState(false);\n\n//   const handleGetOtp = async () => {\n//     if (!doctorId.trim()) {\n//       alert('Please enter your Doctor ID');\n//       return;\n//     }\n//     setLoading(true);\n//     try {\n//       await sendDoctorOtp(doctorId);\n//       setStep(2);\n//     } catch (err) {\n//       console.error(err);\n//       alert('Failed to send OTP. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleVerify = async () => {\n//     if (!otp.trim()) {\n//       alert('Please enter the OTP you received');\n//       return;\n//     }\n//     setLoading(true);\n//     try {\n//       await verifyDoctorOtp(doctorId, otp);\n//       // **** NAVIGATE TO LOCATION SELECTION NEXT ****\n//       navigate('/doctor/location');\n//     } catch (err) {\n//       console.error(err);\n//       alert('Invalid OTP, please retry');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-green-50 px-4\">\n//       <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md\">\n//         <h1 className=\"text-3xl font-bold text-center text-green-800 mb-6\">\n//           MediSync\n//         </h1>\n\n//         {/* Steps: 1=ID, 2=OTP, 3=Done */}\n//         <StepIndicator current={step} total={3} className=\"mb-8\" />\n\n//         {step === 1 ? (\n//           <>\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n//               Doctor ID\n//             </label>\n//             <input\n//               type=\"text\"\n//               value={doctorId}\n//               onChange={e => setDoctorId(e.target.value)}\n//               placeholder=\"Enter your Doctor ID\"\n//               className=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-green-500 focus:border-green-500 mb-4\"\n//             />\n//             <button\n//               onClick={handleGetOtp}\n//               disabled={loading}\n//               className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\"\n//             >\n//               {loading ? 'Sending OTP…' : 'Get OTP'}\n//             </button>\n//           </>\n//         ) : (\n//           <>\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n//               Enter OTP\n//             </label>\n//             <input\n//               type=\"text\"\n//               value={otp}\n//               onChange={e => setOtp(e.target.value)}\n//               placeholder=\"6-digit code\"\n//               className=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-green-500 focus:border-green-500 mb-4\"\n//             />\n//             <button\n//               onClick={handleVerify}\n//               disabled={loading}\n//               className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\"\n//             >\n//               {loading ? 'Verifying…' : 'Verify & Continue'}\n//             </button>\n//             <p\n//               className=\"mt-4 text-center text-sm text-gray-500 hover:underline cursor-pointer\"\n//               onClick={() => setStep(1)}\n//             >\n//               Back to ID\n//             </p>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/medsync/medisync-frontend/src/pages/doctor/Login.js"],"sourcesContent":["// // // File: src/pages/doctor/Login.js\r\n// // import React, { useState } from \"react\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import StepIndicator from \"../../components/doctor/StepIndicator\";\r\n// // import FancyButton from \"../../components/FancyButton\";\r\n// // import { sendDoctorOtp, verifyDoctorOtp } from \"../../services/doctorApi\";\r\n// // import { useDoctorStore } from \"../../store/useDoctorStore\";\r\n\r\n// // export default function DoctorLogin() {\r\n// //   const navigate = useNavigate();\r\n// //   const setDoctor = useDoctorStore((s) => s.setDoctor);\r\n\r\n// //   const [step, setStep] = useState(1);\r\n// //   const [doctorId, setDoctorId] = useState(\"\");\r\n// //   const [otp, setOtp] = useState(\"\");\r\n// //   const [loading, setLoading] = useState(false);\r\n\r\n// //   const handleNext = async () => {\r\n// //     setLoading(true);\r\n// //     try {\r\n// //       if (step === 1) {\r\n// //         await sendDoctorOtp(doctorId);\r\n// //         setStep(2);\r\n// //       } else {\r\n// //         const { doctor } = await verifyDoctorOtp(doctorId, otp);\r\n// //         setDoctor(doctor);\r\n// //         navigate(\"/doctor/location\");\r\n// //       }\r\n// //     } catch {\r\n// //       // show error toast...\r\n// //       alert(\"Oops! Something went wrong.\");\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-white flex items-center justify-center p-4\">\r\n// //       <div className=\"w-full max-w-md bg-white rounded-2xl shadow-xl p-8 space-y-6 relative overflow-hidden\">\r\n// //         <StepIndicator current={step} />\r\n// //         <h1 className=\"text-3xl font-bold text-center text-gray-800\">\r\n// //           {step === 1 ? \"Doctor Login\" : \"Verify OTP\"}\r\n// //         </h1>\r\n\r\n// //         {step === 1 ? (\r\n// //           <input\r\n// //             type=\"text\"\r\n// //             placeholder=\"Enter Doctor ID\"\r\n// //             value={doctorId}\r\n// //             onChange={(e) => setDoctorId(e.target.value)}\r\n// //             className=\"w-full border-2 border-gray-200 rounded-lg px-4 py-2 focus:border-teal-500 focus:ring-0 transition\"\r\n// //           />\r\n// //         ) : (\r\n// //           <input\r\n// //             type=\"text\"\r\n// //             placeholder=\"Enter 6-digit OTP\"\r\n// //             value={otp}\r\n// //             onChange={(e) => setOtp(e.target.value)}\r\n// //             className=\"w-full border-2 border-gray-200 rounded-lg px-4 py-2 focus:border-teal-500 focus:ring-0 transition\"\r\n// //           />\r\n// //         )}\r\n\r\n// //         <FancyButton loading={loading} onClick={handleNext}>\r\n// //           {step === 1 ? \"Get OTP\" : \"Verify & Continue\"}\r\n// //         </FancyButton>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// // File: src/pages/doctor/Login.js\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { sendDoctorOtp, verifyDoctorOtp } from '../../services/doctorApi';\r\n// import StepIndicator from '../../components/doctor/StepIndicator';\r\n\r\n// export default function DoctorLogin() {\r\n//   const navigate = useNavigate();\r\n\r\n//   const [doctorId, setDoctorId] = useState('');\r\n//   const [otp, setOtp] = useState('');\r\n//   const [step, setStep] = useState(1);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleGetOtp = async () => {\r\n//     if (!doctorId.trim()) {\r\n//       alert('Please enter your Doctor ID');\r\n//       return;\r\n//     }\r\n//     setLoading(true);\r\n//     try {\r\n//       await sendDoctorOtp(doctorId);\r\n//       setStep(2);\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       alert('Failed to send OTP. Please try again.');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleVerify = async () => {\r\n//     if (!otp.trim()) {\r\n//       alert('Please enter the OTP you received');\r\n//       return;\r\n//     }\r\n//     setLoading(true);\r\n//     try {\r\n//       await verifyDoctorOtp(doctorId, otp);\r\n//       // **** NAVIGATE TO LOCATION SELECTION NEXT ****\r\n//       navigate('/doctor/location');\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       alert('Invalid OTP, please retry');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex items-center justify-center bg-green-50 px-4\">\r\n//       <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md\">\r\n//         <h1 className=\"text-3xl font-bold text-center text-green-800 mb-6\">\r\n//           MediSync\r\n//         </h1>\r\n\r\n//         {/* Steps: 1=ID, 2=OTP, 3=Done */}\r\n//         <StepIndicator current={step} total={3} className=\"mb-8\" />\r\n\r\n//         {step === 1 ? (\r\n//           <>\r\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n//               Doctor ID\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={doctorId}\r\n//               onChange={e => setDoctorId(e.target.value)}\r\n//               placeholder=\"Enter your Doctor ID\"\r\n//               className=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-green-500 focus:border-green-500 mb-4\"\r\n//             />\r\n//             <button\r\n//               onClick={handleGetOtp}\r\n//               disabled={loading}\r\n//               className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\"\r\n//             >\r\n//               {loading ? 'Sending OTP…' : 'Get OTP'}\r\n//             </button>\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n//               Enter OTP\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={otp}\r\n//               onChange={e => setOtp(e.target.value)}\r\n//               placeholder=\"6-digit code\"\r\n//               className=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-green-500 focus:border-green-500 mb-4\"\r\n//             />\r\n//             <button\r\n//               onClick={handleVerify}\r\n//               disabled={loading}\r\n//               className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\"\r\n//             >\r\n//               {loading ? 'Verifying…' : 'Verify & Continue'}\r\n//             </button>\r\n//             <p\r\n//               className=\"mt-4 text-center text-sm text-gray-500 hover:underline cursor-pointer\"\r\n//               onClick={() => setStep(1)}\r\n//             >\r\n//               Back to ID\r\n//             </p>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}