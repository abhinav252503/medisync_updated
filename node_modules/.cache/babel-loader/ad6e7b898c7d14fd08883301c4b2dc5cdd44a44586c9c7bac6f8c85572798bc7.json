{"ast":null,"code":"var _jsxFileName = \"D:\\\\medsync\\\\medisync-frontend\\\\src\\\\pages\\\\login_page.js\",\n  _s = $RefreshSig$();\n// // File: src/pages/Login.js\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { useUserStore } from \"../store/user_store\";\n\n// const Login = () => {\n//   const navigate = useNavigate();\n//   const setUser = useUserStore((state) => state.setUser);\n\n//   const [email, setEmail] = useState(\"\");\n//   const [otp, setOtp] = useState(\"\");\n//   const [step, setStep] = useState(1);\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSendOtp = async () => {\n//     setLoading(true);\n//     try {\n//       await axios.post(\"/api/auth/send-otp\", { email });\n//       setStep(2);\n//     } catch (err) {\n//       alert(\"Failed to send OTP\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleVerifyOtp = async () => {\n//     setLoading(true);\n//     try {\n//       const res = await axios.post(\"/api/auth/verify-otp\", { email, otp });\n//       setUser(res.data.user);\n//       navigate(\"/dashboard\");\n//     } catch (err) {\n//       alert(\"Invalid OTP\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 px-4\">\n//       <div className=\"max-w-md w-full bg-white p-6 rounded-lg shadow-md\">\n//         <h2 className=\"text-2xl font-semibold text-center mb-4\">\n//           {step === 1 ? \"Login with Email\" : \"Enter OTP\"}\n//         </h2>\n//         {step === 1 ? (\n//           <>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               className=\"w-full px-4 py-2 mb-4 border rounded-md\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//             <button\n//               onClick={handleSendOtp}\n//               disabled={loading}\n//               className=\"w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600\"\n//             >\n//               {loading ? \"Sending...\" : \"Send OTP\"}\n//             </button>\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter OTP\"\n//               className=\"w-full px-4 py-2 mb-4 border rounded-md\"\n//               value={otp}\n//               onChange={(e) => setOtp(e.target.value)}\n//             />\n//             <button\n//               onClick={handleVerifyOtp}\n//               disabled={loading}\n//               className=\"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600\"\n//             >\n//               {loading ? \"Verifying...\" : \"Verify OTP\"}\n//             </button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// mock api use\n// export default Login;\n// File: src/pages/Login.js\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { sendOtp, verifyOtp } from \"../services/mockApi\";\n// import { useUserStore } from \"../store/user_store\";\n\n// const Login = () => {\n//   const navigate = useNavigate();\n//   const setUser = useUserStore((state) => state.setUser);\n\n//   const [email, setEmail] = useState(\"\");\n//   const [otp, setOtp] = useState(\"\");\n//   const [step, setStep] = useState(1);\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSendOtp = async () => {\n//     setLoading(true);\n//     try {\n//       await sendOtp(email);\n//       setStep(2);\n//     } catch (err) {\n//       alert(\"Failed to send OTP\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleVerifyOtp = async () => {\n//     setLoading(true);\n//     try {\n//       const res = await verifyOtp(email, otp);\n//       setUser(res.user);\n//       navigate(\"/dashboard\");\n//     } catch (err) {\n//       alert(\"Invalid OTP\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 px-4\">\n//       <div className=\"max-w-md w-full bg-white p-6 rounded-lg shadow-md\">\n//         <h2 className=\"text-2xl font-semibold text-center mb-4\">\n//           {step === 1 ? \"Login with Email\" : \"Enter OTP\"}\n//         </h2>\n//         {step === 1 ? (\n//           <>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               className=\"w-full px-4 py-2 mb-4 border rounded-md\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//             <button\n//               onClick={handleSendOtp}\n//               disabled={loading}\n//               className=\"w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600\"\n//             >\n//               {loading ? \"Sending...\" : \"Send OTP\"}\n//             </button>\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter OTP\"\n//               className=\"w-full px-4 py-2 mb-4 border rounded-md\"\n//               value={otp}\n//               onChange={(e) => setOtp(e.target.value)}\n//             />\n//             <button\n//               onClick={handleVerifyOtp}\n//               disabled={loading}\n//               className=\"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600\"\n//             >\n//               {loading ? \"Verifying...\" : \"Verify OTP\"}\n//             </button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n// with doctor\n// File: src/pages/Login.js\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// Import both patient and doctor mock APIs (or real APIs once you swap)\nimport { sendOtp, verifyOtp } from \"../services/mockApi\";\nimport { sendDoctorOtp, verifyDoctorOtp } from \"../services/doctorApi\";\nimport { useUserStore } from \"../store/user_store\";\nimport { useDoctorStore } from \"../store/useDoctorStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const setUser = useUserStore(s => s.setUser);\n  const setDoctor = useDoctorStore(s => s.setDoctor);\n  const [userType, setUserType] = useState(null); // 'patient' or 'doctor'\n  const [identifier, setIdentifier] = useState(\"\"); // email or doctor ID\n  const [otp, setOtp] = useState(\"\");\n  const [step, setStep] = useState(1); // 1 = send OTP, 2 = verify\n  const [loading, setLoading] = useState(false);\n  const handleUserType = type => {\n    setUserType(type);\n    setIdentifier(\"\");\n    setOtp(\"\");\n    setStep(1);\n  };\n  const handleSendOtp = async () => {\n    if (!identifier) return;\n    setLoading(true);\n    try {\n      if (userType === \"patient\") {\n        await sendOtp(identifier);\n      } else {\n        await sendDoctorOtp(identifier);\n      }\n      setStep(2);\n    } catch {\n      alert(\"Failed to send OTP\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!otp) return;\n    setLoading(true);\n    try {\n      if (userType === \"patient\") {\n        const res = await verifyOtp(identifier, otp);\n        setUser(res.user);\n        navigate(\"/dashboard\");\n      } else {\n        const res = await verifyDoctorOtp(identifier, otp);\n        setDoctor(res.doctor);\n        navigate(\"/doctor/location\");\n      }\n    } catch {\n      alert(\"Invalid OTP\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Step 0: Choose user type\n  if (!userType) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-6\",\n        children: \"Log in as:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUserType(\"patient\"),\n          className: \"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700\",\n          children: \"Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUserType(\"doctor\"),\n          className: \"px-6 py-3 bg-teal-600 text-white rounded-lg hover:bg-teal-700\",\n          children: \"Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Step 1 & 2: OTP flow\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-100 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-sm bg-white p-6 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-center mb-4\",\n        children: step === 1 ? userType === \"patient\" ? \"Patient Login\" : \"Doctor Login\" : \"Enter OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), step === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: userType === \"patient\" ? \"Email\" : \"Doctor ID\",\n          value: identifier,\n          onChange: e => setIdentifier(e.target.value),\n          className: \"w-full border rounded px-4 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendOtp,\n          disabled: loading,\n          className: \"w-full bg-indigo-600 text-white py-2 rounded hover:bg-indigo-700 disabled:opacity-50\",\n          children: loading ? \"Sending OTP...\" : \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          className: \"w-full border rounded px-4 py-2 focus:outline-none focus:ring-2 focus:ring-green-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVerifyOtp,\n          disabled: loading,\n          className: \"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 disabled:opacity-50\",\n          children: loading ? \"Verifying...\" : \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserType(null),\n        className: \"mt-4 text-sm text-gray-500 underline\",\n        children: \"Back to User Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ao4N6+gC9u3UuALVIJs9Y2SqF10=\", false, function () {\n  return [useNavigate, useUserStore, useDoctorStore];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","sendOtp","verifyOtp","sendDoctorOtp","verifyDoctorOtp","useUserStore","useDoctorStore","jsxDEV","_jsxDEV","Login","_s","navigate","setUser","s","setDoctor","userType","setUserType","identifier","setIdentifier","otp","setOtp","step","setStep","loading","setLoading","handleUserType","type","handleSendOtp","alert","handleVerifyOtp","res","user","doctor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["D:/medsync/medisync-frontend/src/pages/login_page.js"],"sourcesContent":["// // File: src/pages/Login.js\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { useUserStore } from \"../store/user_store\";\n\n// const Login = () => {\n//   const navigate = useNavigate();\n//   const setUser = useUserStore((state) => state.setUser);\n\n//   const [email, setEmail] = useState(\"\");\n//   const [otp, setOtp] = useState(\"\");\n//   const [step, setStep] = useState(1);\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSendOtp = async () => {\n//     setLoading(true);\n//     try {\n//       await axios.post(\"/api/auth/send-otp\", { email });\n//       setStep(2);\n//     } catch (err) {\n//       alert(\"Failed to send OTP\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleVerifyOtp = async () => {\n//     setLoading(true);\n//     try {\n//       const res = await axios.post(\"/api/auth/verify-otp\", { email, otp });\n//       setUser(res.data.user);\n//       navigate(\"/dashboard\");\n//     } catch (err) {\n//       alert(\"Invalid OTP\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 px-4\">\n//       <div className=\"max-w-md w-full bg-white p-6 rounded-lg shadow-md\">\n//         <h2 className=\"text-2xl font-semibold text-center mb-4\">\n//           {step === 1 ? \"Login with Email\" : \"Enter OTP\"}\n//         </h2>\n//         {step === 1 ? (\n//           <>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               className=\"w-full px-4 py-2 mb-4 border rounded-md\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//             <button\n//               onClick={handleSendOtp}\n//               disabled={loading}\n//               className=\"w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600\"\n//             >\n//               {loading ? \"Sending...\" : \"Send OTP\"}\n//             </button>\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter OTP\"\n//               className=\"w-full px-4 py-2 mb-4 border rounded-md\"\n//               value={otp}\n//               onChange={(e) => setOtp(e.target.value)}\n//             />\n//             <button\n//               onClick={handleVerifyOtp}\n//               disabled={loading}\n//               className=\"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600\"\n//             >\n//               {loading ? \"Verifying...\" : \"Verify OTP\"}\n//             </button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n\n// mock api use\n// export default Login;\n// File: src/pages/Login.js\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { sendOtp, verifyOtp } from \"../services/mockApi\";\n// import { useUserStore } from \"../store/user_store\";\n\n// const Login = () => {\n//   const navigate = useNavigate();\n//   const setUser = useUserStore((state) => state.setUser);\n\n//   const [email, setEmail] = useState(\"\");\n//   const [otp, setOtp] = useState(\"\");\n//   const [step, setStep] = useState(1);\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSendOtp = async () => {\n//     setLoading(true);\n//     try {\n//       await sendOtp(email);\n//       setStep(2);\n//     } catch (err) {\n//       alert(\"Failed to send OTP\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleVerifyOtp = async () => {\n//     setLoading(true);\n//     try {\n//       const res = await verifyOtp(email, otp);\n//       setUser(res.user);\n//       navigate(\"/dashboard\");\n//     } catch (err) {\n//       alert(\"Invalid OTP\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 px-4\">\n//       <div className=\"max-w-md w-full bg-white p-6 rounded-lg shadow-md\">\n//         <h2 className=\"text-2xl font-semibold text-center mb-4\">\n//           {step === 1 ? \"Login with Email\" : \"Enter OTP\"}\n//         </h2>\n//         {step === 1 ? (\n//           <>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               className=\"w-full px-4 py-2 mb-4 border rounded-md\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//             <button\n//               onClick={handleSendOtp}\n//               disabled={loading}\n//               className=\"w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600\"\n//             >\n//               {loading ? \"Sending...\" : \"Send OTP\"}\n//             </button>\n//           </>\n//         ) : (\n//           <>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter OTP\"\n//               className=\"w-full px-4 py-2 mb-4 border rounded-md\"\n//               value={otp}\n//               onChange={(e) => setOtp(e.target.value)}\n//             />\n//             <button\n//               onClick={handleVerifyOtp}\n//               disabled={loading}\n//               className=\"w-full bg-green-500 text-white py-2 rounded hover:bg-green-600\"\n//             >\n//               {loading ? \"Verifying...\" : \"Verify OTP\"}\n//             </button>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n\n// with doctor\n// File: src/pages/Login.js\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// Import both patient and doctor mock APIs (or real APIs once you swap)\nimport { sendOtp, verifyOtp } from \"../services/mockApi\";\nimport { sendDoctorOtp, verifyDoctorOtp } from \"../services/doctorApi\";\nimport { useUserStore } from \"../store/user_store\";\nimport { useDoctorStore } from \"../store/useDoctorStore\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const setUser = useUserStore((s) => s.setUser);\n  const setDoctor = useDoctorStore((s) => s.setDoctor);\n\n  const [userType, setUserType] = useState(null);     // 'patient' or 'doctor'\n  const [identifier, setIdentifier] = useState(\"\");   // email or doctor ID\n  const [otp, setOtp] = useState(\"\");\n  const [step, setStep] = useState(1);                // 1 = send OTP, 2 = verify\n  const [loading, setLoading] = useState(false);\n\n  const handleUserType = (type) => {\n    setUserType(type);\n    setIdentifier(\"\");\n    setOtp(\"\");\n    setStep(1);\n  };\n\n  const handleSendOtp = async () => {\n    if (!identifier) return;\n    setLoading(true);\n    try {\n      if (userType === \"patient\") {\n        await sendOtp(identifier);\n      } else {\n        await sendDoctorOtp(identifier);\n      }\n      setStep(2);\n    } catch {\n      alert(\"Failed to send OTP\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleVerifyOtp = async () => {\n    if (!otp) return;\n    setLoading(true);\n    try {\n      if (userType === \"patient\") {\n        const res = await verifyOtp(identifier, otp);\n        setUser(res.user);\n        navigate(\"/dashboard\");\n      } else {\n        const res = await verifyDoctorOtp(identifier, otp);\n        setDoctor(res.doctor);\n        navigate(\"/doctor/location\");\n      }\n    } catch {\n      alert(\"Invalid OTP\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Step 0: Choose user type\n  if (!userType) {\n    return (\n      <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4\">\n        <h2 className=\"text-2xl font-semibold mb-6\">Log in as:</h2>\n        <div className=\"flex space-x-4\">\n          <button\n            onClick={() => handleUserType(\"patient\")}\n            className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n          >\n            Patient\n          </button>\n          <button\n            onClick={() => handleUserType(\"doctor\")}\n            className=\"px-6 py-3 bg-teal-600 text-white rounded-lg hover:bg-teal-700\"\n          >\n            Doctor\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Step 1 & 2: OTP flow\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100 p-4\">\n      <div className=\"w-full max-w-sm bg-white p-6 rounded-lg shadow\">\n        <h2 className=\"text-xl font-semibold text-center mb-4\">\n          {step === 1\n            ? userType === \"patient\"\n              ? \"Patient Login\"\n              : \"Doctor Login\"\n            : \"Enter OTP\"}\n        </h2>\n\n        {step === 1 ? (\n          <div className=\"space-y-4\">\n            <input\n              type=\"text\"\n              placeholder={userType === \"patient\" ? \"Email\" : \"Doctor ID\"}\n              value={identifier}\n              onChange={(e) => setIdentifier(e.target.value)}\n              className=\"w-full border rounded px-4 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-300\"\n            />\n            <button\n              onClick={handleSendOtp}\n              disabled={loading}\n              className=\"w-full bg-indigo-600 text-white py-2 rounded hover:bg-indigo-700 disabled:opacity-50\"\n            >\n              {loading ? \"Sending OTP...\" : \"Send OTP\"}\n            </button>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter OTP\"\n              value={otp}\n              onChange={(e) => setOtp(e.target.value)}\n              className=\"w-full border rounded px-4 py-2 focus:outline-none focus:ring-2 focus:ring-green-300\"\n            />\n            <button\n              onClick={handleVerifyOtp}\n              disabled={loading}\n              className=\"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 disabled:opacity-50\"\n            >\n              {loading ? \"Verifying...\" : \"Verify OTP\"}\n            </button>\n          </div>\n        )}\n\n        {/* Back button to re-pick user type */}\n        {step === 2 && (\n          <button\n            onClick={() => handleUserType(null)}\n            className=\"mt-4 text-sm text-gray-500 underline\"\n          >\n            Back to User Selection\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA,SAASC,OAAO,EAAEC,SAAS,QAAQ,qBAAqB;AACxD,SAASC,aAAa,EAAEC,eAAe,QAAQ,uBAAuB;AACtE,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,OAAO,GAAGP,YAAY,CAAEQ,CAAC,IAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}