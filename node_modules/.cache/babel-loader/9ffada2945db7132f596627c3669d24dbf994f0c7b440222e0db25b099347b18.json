{"ast":null,"code":"var _jsxFileName = \"D:\\\\medsync\\\\medisync-frontend\\\\src\\\\pages\\\\doctor\\\\PatientAccess.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { requestPatientConsent } from \"../../services/doctorApi\";\nimport { useDoctorStore } from \"../../store/useDoctorStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PatientAccess() {\n  _s();\n  const navigate = useNavigate();\n  const setPatient = useDoctorStore(s => s.setPatient);\n  const [patientId, setPatientId] = useState(\"\");\n  const [waiting, setWaiting] = useState(false);\n  const onRequest = async () => {\n    setWaiting(true);\n    const res = await requestPatientConsent(patientId);\n    setPatient(res.patient);\n    navigate(\"/doctor/dashboard\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gradient-to-br from-white to-gray-100 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-2xl shadow max-w-sm w-full space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-medium text-center\",\n        children: \"Enter Patient ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: patientId,\n        onChange: e => setPatientId(e.target.value),\n        placeholder: \"Patient ID\",\n        className: \"w-full border-gray-300 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-teal-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRequest,\n        disabled: !patientId || waiting,\n        className: \"w-full bg-teal-600 text-white py-2 rounded-lg hover:bg-teal-700 disabled:opacity-50\",\n        children: waiting ? \"Waiting for Consent…\" : \"Request Consent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientAccess, \"he+D/Qrp6ob+NL5WCpz/0AO28Ag=\", false, function () {\n  return [useNavigate, useDoctorStore];\n});\n_c = PatientAccess;\nvar _c;\n$RefreshReg$(_c, \"PatientAccess\");","map":{"version":3,"names":["React","useState","useNavigate","requestPatientConsent","useDoctorStore","jsxDEV","_jsxDEV","PatientAccess","_s","navigate","setPatient","s","patientId","setPatientId","waiting","setWaiting","onRequest","res","patient","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/medsync/medisync-frontend/src/pages/doctor/PatientAccess.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { requestPatientConsent } from \"../../services/doctorApi\";\r\nimport { useDoctorStore } from \"../../store/useDoctorStore\";\r\n\r\nexport default function PatientAccess() {\r\n  const navigate = useNavigate();\r\n  const setPatient = useDoctorStore((s) => s.setPatient);\r\n  const [patientId, setPatientId] = useState(\"\");\r\n  const [waiting, setWaiting] = useState(false);\r\n\r\n  const onRequest = async () => {\r\n    setWaiting(true);\r\n    const res = await requestPatientConsent(patientId);\r\n    setPatient(res.patient);\r\n    navigate(\"/doctor/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-white to-gray-100 p-4\">\r\n      <div className=\"bg-white p-6 rounded-2xl shadow max-w-sm w-full space-y-4\">\r\n        <h2 className=\"text-lg font-medium text-center\">Enter Patient ID</h2>\r\n        <input\r\n          value={patientId}\r\n          onChange={(e) => setPatientId(e.target.value)}\r\n          placeholder=\"Patient ID\"\r\n          className=\"w-full border-gray-300 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-teal-200\"\r\n        />\r\n        <button\r\n   onClick={onRequest}\r\n   disabled={!patientId || waiting}\r\n   className=\"w-full bg-teal-600 text-white py-2 rounded-lg hover:bg-teal-700 disabled:opacity-50\"\r\n >\r\n   {waiting ? \"Waiting for Consent…\" : \"Request Consent\"}\r\n </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,SAASC,cAAc,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,UAAU,GAAGN,cAAc,CAAEO,CAAC,IAAKA,CAAC,CAACD,UAAU,CAAC;EACtD,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BD,UAAU,CAAC,IAAI,CAAC;IAChB,MAAME,GAAG,GAAG,MAAMd,qBAAqB,CAACS,SAAS,CAAC;IAClDF,UAAU,CAACO,GAAG,CAACC,OAAO,CAAC;IACvBT,QAAQ,CAAC,mBAAmB,CAAC;EAC/B,CAAC;EAED,oBACEH,OAAA;IAAKa,SAAS,EAAC,4FAA4F;IAAAC,QAAA,eACzGd,OAAA;MAAKa,SAAS,EAAC,2DAA2D;MAAAC,QAAA,gBACxEd,OAAA;QAAIa,SAAS,EAAC,iCAAiC;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrElB,OAAA;QACEmB,KAAK,EAAEb,SAAU;QACjBc,QAAQ,EAAGC,CAAC,IAAKd,YAAY,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,WAAW,EAAC,YAAY;QACxBV,SAAS,EAAC;MAAqF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG,CAAC,eACFlB,OAAA;QACLwB,OAAO,EAAEd,SAAU;QACnBe,QAAQ,EAAE,CAACnB,SAAS,IAAIE,OAAQ;QAChCK,SAAS,EAAC,qFAAqF;QAAAC,QAAA,EAE9FN,OAAO,GAAG,sBAAsB,GAAG;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAjCuBD,aAAa;EAAA,QAClBL,WAAW,EACTE,cAAc;AAAA;AAAA4B,EAAA,GAFXzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}