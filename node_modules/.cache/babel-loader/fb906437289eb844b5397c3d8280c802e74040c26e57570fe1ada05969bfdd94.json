{"ast":null,"code":"var _jsxFileName = \"D:\\\\medsync\\\\medisync-frontend\\\\src\\\\pages\\\\doctor\\\\Login.js\",\n  _s = $RefreshSig$();\n// // File: src/pages/doctor/Login.js\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import StepIndicator from \"../../components/doctor/StepIndicator\";\n// import FancyButton from \"../../components/FancyButton\";\n// import { sendDoctorOtp, verifyDoctorOtp } from \"../../services/doctorApi\";\n// import { useDoctorStore } from \"../../store/useDoctorStore\";\n\n// export default function DoctorLogin() {\n//   const navigate = useNavigate();\n//   const setDoctor = useDoctorStore((s) => s.setDoctor);\n\n//   const [step, setStep] = useState(1);\n//   const [doctorId, setDoctorId] = useState(\"\");\n//   const [otp, setOtp] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n\n//   const handleNext = async () => {\n//     setLoading(true);\n//     try {\n//       if (step === 1) {\n//         await sendDoctorOtp(doctorId);\n//         setStep(2);\n//       } else {\n//         const { doctor } = await verifyDoctorOtp(doctorId, otp);\n//         setDoctor(doctor);\n//         navigate(\"/doctor/location\");\n//       }\n//     } catch {\n//       // show error toast...\n//       alert(\"Oops! Something went wrong.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-white flex items-center justify-center p-4\">\n//       <div className=\"w-full max-w-md bg-white rounded-2xl shadow-xl p-8 space-y-6 relative overflow-hidden\">\n//         <StepIndicator current={step} />\n//         <h1 className=\"text-3xl font-bold text-center text-gray-800\">\n//           {step === 1 ? \"Doctor Login\" : \"Verify OTP\"}\n//         </h1>\n\n//         {step === 1 ? (\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter Doctor ID\"\n//             value={doctorId}\n//             onChange={(e) => setDoctorId(e.target.value)}\n//             className=\"w-full border-2 border-gray-200 rounded-lg px-4 py-2 focus:border-teal-500 focus:ring-0 transition\"\n//           />\n//         ) : (\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter 6-digit OTP\"\n//             value={otp}\n//             onChange={(e) => setOtp(e.target.value)}\n//             className=\"w-full border-2 border-gray-200 rounded-lg px-4 py-2 focus:border-teal-500 focus:ring-0 transition\"\n//           />\n//         )}\n\n//         <FancyButton loading={loading} onClick={handleNext}>\n//           {step === 1 ? \"Get OTP\" : \"Verify & Continue\"}\n//         </FancyButton>\n//       </div>\n//     </div>\n//   );\n// }\n// File: src/pages/doctor/Login.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { sendDoctorOtp, verifyDoctorOtp } from '../../services/doctorApi';\nimport StepIndicator from '../../components/doctor/StepIndicator';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DoctorLogin() {\n  _s();\n  const navigate = useNavigate();\n  const [doctorId, setDoctorId] = useState('');\n  const [otp, setOtp] = useState('');\n  const [step, setStep] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const handleGetOtp = async () => {\n    if (!doctorId.trim()) {\n      alert('Please enter your Doctor ID');\n      return;\n    }\n    setLoading(true);\n    try {\n      await sendDoctorOtp(doctorId);\n      setStep(2);\n    } catch (err) {\n      console.error(err);\n      alert('Failed to send OTP. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleVerify = async () => {\n    if (!otp.trim()) {\n      alert('Please enter the OTP you received');\n      return;\n    }\n    setLoading(true);\n    try {\n      await verifyDoctorOtp(doctorId, otp);\n      // **** NAVIGATE TO LOCATION SELECTION NEXT ****\n      navigate('/doctor/location');\n    } catch (err) {\n      console.error(err);\n      alert('Invalid OTP, please retry');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-green-50 px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center text-green-800 mb-6\",\n        children: \"MediSync\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StepIndicator, {\n        current: step,\n        total: 3,\n        className: \"mb-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), step === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"Doctor ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: doctorId,\n          onChange: e => setDoctorId(e.target.value),\n          placeholder: \"Enter your Doctor ID\",\n          className: \"w-full border-gray-300 rounded-lg shadow-sm focus:ring-green-500 focus:border-green-500 mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGetOtp,\n          disabled: loading,\n          className: \"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\",\n          children: loading ? 'Sending OTP…' : 'Get OTP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"Enter OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          placeholder: \"6-digit code\",\n          className: \"w-full border-gray-300 rounded-lg shadow-sm focus:ring-green-500 focus:border-green-500 mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVerify,\n          disabled: loading,\n          className: \"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\",\n          children: loading ? 'Verifying…' : 'Verify & Continue'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-center text-sm text-gray-500 hover:underline cursor-pointer\",\n          onClick: () => setStep(1),\n          children: \"Back to ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorLogin, \"USR27sQet/XkCuAUL4C4au38FMk=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorLogin;\nvar _c;\n$RefreshReg$(_c, \"DoctorLogin\");","map":{"version":3,"names":["React","useState","useNavigate","sendDoctorOtp","verifyDoctorOtp","StepIndicator","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorLogin","_s","navigate","doctorId","setDoctorId","otp","setOtp","step","setStep","loading","setLoading","handleGetOtp","trim","alert","err","console","error","handleVerify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","current","total","type","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/medsync/medisync-frontend/src/pages/doctor/Login.js"],"sourcesContent":["// // File: src/pages/doctor/Login.js\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import StepIndicator from \"../../components/doctor/StepIndicator\";\r\n// import FancyButton from \"../../components/FancyButton\";\r\n// import { sendDoctorOtp, verifyDoctorOtp } from \"../../services/doctorApi\";\r\n// import { useDoctorStore } from \"../../store/useDoctorStore\";\r\n\r\n// export default function DoctorLogin() {\r\n//   const navigate = useNavigate();\r\n//   const setDoctor = useDoctorStore((s) => s.setDoctor);\r\n\r\n//   const [step, setStep] = useState(1);\r\n//   const [doctorId, setDoctorId] = useState(\"\");\r\n//   const [otp, setOtp] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleNext = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       if (step === 1) {\r\n//         await sendDoctorOtp(doctorId);\r\n//         setStep(2);\r\n//       } else {\r\n//         const { doctor } = await verifyDoctorOtp(doctorId, otp);\r\n//         setDoctor(doctor);\r\n//         navigate(\"/doctor/location\");\r\n//       }\r\n//     } catch {\r\n//       // show error toast...\r\n//       alert(\"Oops! Something went wrong.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-white flex items-center justify-center p-4\">\r\n//       <div className=\"w-full max-w-md bg-white rounded-2xl shadow-xl p-8 space-y-6 relative overflow-hidden\">\r\n//         <StepIndicator current={step} />\r\n//         <h1 className=\"text-3xl font-bold text-center text-gray-800\">\r\n//           {step === 1 ? \"Doctor Login\" : \"Verify OTP\"}\r\n//         </h1>\r\n\r\n//         {step === 1 ? (\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Doctor ID\"\r\n//             value={doctorId}\r\n//             onChange={(e) => setDoctorId(e.target.value)}\r\n//             className=\"w-full border-2 border-gray-200 rounded-lg px-4 py-2 focus:border-teal-500 focus:ring-0 transition\"\r\n//           />\r\n//         ) : (\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter 6-digit OTP\"\r\n//             value={otp}\r\n//             onChange={(e) => setOtp(e.target.value)}\r\n//             className=\"w-full border-2 border-gray-200 rounded-lg px-4 py-2 focus:border-teal-500 focus:ring-0 transition\"\r\n//           />\r\n//         )}\r\n\r\n//         <FancyButton loading={loading} onClick={handleNext}>\r\n//           {step === 1 ? \"Get OTP\" : \"Verify & Continue\"}\r\n//         </FancyButton>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// File: src/pages/doctor/Login.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { sendDoctorOtp, verifyDoctorOtp } from '../../services/doctorApi';\r\nimport StepIndicator from '../../components/doctor/StepIndicator';\r\n\r\nexport default function DoctorLogin() {\r\n  const navigate = useNavigate();\r\n\r\n  const [doctorId, setDoctorId] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [step, setStep] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleGetOtp = async () => {\r\n    if (!doctorId.trim()) {\r\n      alert('Please enter your Doctor ID');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      await sendDoctorOtp(doctorId);\r\n      setStep(2);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Failed to send OTP. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleVerify = async () => {\r\n    if (!otp.trim()) {\r\n      alert('Please enter the OTP you received');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      await verifyDoctorOtp(doctorId, otp);\r\n      // **** NAVIGATE TO LOCATION SELECTION NEXT ****\r\n      navigate('/doctor/location');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Invalid OTP, please retry');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-green-50 px-4\">\r\n      <div className=\"bg-white rounded-2xl shadow-xl p-8 w-full max-w-md\">\r\n        <h1 className=\"text-3xl font-bold text-center text-green-800 mb-6\">\r\n          MediSync\r\n        </h1>\r\n\r\n        {/* Steps: 1=ID, 2=OTP, 3=Done */}\r\n        <StepIndicator current={step} total={3} className=\"mb-8\" />\r\n\r\n        {step === 1 ? (\r\n          <>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Doctor ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={doctorId}\r\n              onChange={e => setDoctorId(e.target.value)}\r\n              placeholder=\"Enter your Doctor ID\"\r\n              className=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-green-500 focus:border-green-500 mb-4\"\r\n            />\r\n            <button\r\n              onClick={handleGetOtp}\r\n              disabled={loading}\r\n              className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Sending OTP…' : 'Get OTP'}\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Enter OTP\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={otp}\r\n              onChange={e => setOtp(e.target.value)}\r\n              placeholder=\"6-digit code\"\r\n              className=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-green-500 focus:border-green-500 mb-4\"\r\n            />\r\n            <button\r\n              onClick={handleVerify}\r\n              disabled={loading}\r\n              className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Verifying…' : 'Verify & Continue'}\r\n            </button>\r\n            <p\r\n              className=\"mt-4 text-center text-sm text-gray-500 hover:underline cursor-pointer\"\r\n              onClick={() => setStep(1)}\r\n            >\r\n              Back to ID\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}