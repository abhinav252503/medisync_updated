{"ast":null,"code":"var _jsxFileName = \"D:\\\\medsync\\\\medisync-frontend\\\\src\\\\pages\\\\upload_page.js\",\n  _s = $RefreshSig$();\n// // File: src/pages/Upload.js\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useUserStore } from \"../store/user_store\";\n\n// const Upload = () => {\n//   const { user } = useUserStore();\n//   const [form, setForm] = useState({ patientId: \"\", diagnosis: \"\" });\n//   const [file, setFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setForm((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!file) return alert(\"Please attach a file.\");\n\n//     const formData = new FormData();\n//     formData.append(\"patientId\", form.patientId);\n//     formData.append(\"diagnosis\", form.diagnosis);\n//     formData.append(\"doctorId\", user.id);\n//     formData.append(\"file\", file);\n\n//     setLoading(true);\n//     try {\n//       await axios.post(\"/api/upload/prescription\", formData);\n//       alert(\"Prescription uploaded successfully.\");\n//       setForm({ patientId: \"\", diagnosis: \"\" });\n//       setFile(null);\n//     } catch (err) {\n//       alert(\"Upload failed. Try again.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 py-10 px-6\">\n//       <div className=\"max-w-2xl mx-auto bg-white p-6 rounded shadow\">\n//         <h2 className=\"text-2xl font-semibold mb-6\">Upload Prescription</h2>\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\n//           <input\n//             name=\"patientId\"\n//             value={form.patientId}\n//             onChange={handleChange}\n//             placeholder=\"Patient ID\"\n//             required\n//             className=\"w-full px-4 py-2 border rounded\"\n//           />\n//           <textarea\n//             name=\"diagnosis\"\n//             value={form.diagnosis}\n//             onChange={handleChange}\n//             placeholder=\"Diagnosis Summary\"\n//             required\n//             rows={3}\n//             className=\"w-full px-4 py-2 border rounded\"\n//           />\n//           <input\n//             type=\"file\"\n//             accept=\"application/pdf,image/*\"\n//             onChange={(e) => setFile(e.target.files[0])}\n//             required\n//             className=\"w-full\"\n//           />\n//           <button\n//             type=\"submit\"\n//             disabled={loading}\n//             className=\"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700\"\n//           >\n//             {loading ? \"Uploading...\" : \"Upload Prescription\"}\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Upload;\n\n// mock use \n// File: src/pages/Upload.js\nimport React, { useState } from \"react\";\nimport { uploadPrescription } from \"../services/mockApi\";\nimport { useUserStore } from \"../store/user_store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const {\n    user\n  } = useUserStore();\n  const [form, setForm] = useState({\n    patientId: \"\",\n    diagnosis: \"\"\n  });\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) return alert(\"Please attach a file.\");\n    setLoading(true);\n    try {\n      // Mock API ignores actual formData\n      await uploadPrescription();\n      alert(\"Prescription uploaded successfully.\");\n      setForm({\n        patientId: \"\",\n        diagnosis: \"\"\n      });\n      setFile(null);\n    } catch (err) {\n      alert(\"Upload failed. Try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-10 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto bg-white p-6 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-6\",\n        children: \"Upload Prescription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"patientId\",\n          value: form.patientId,\n          onChange: handleChange,\n          placeholder: \"Patient ID\",\n          required: true,\n          className: \"w-full px-4 py-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"diagnosis\",\n          value: form.diagnosis,\n          onChange: handleChange,\n          placeholder: \"Diagnosis Summary\",\n          required: true,\n          rows: 3,\n          className: \"w-full px-4 py-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"application/pdf,image/*\",\n          onChange: e => setFile(e.target.files[0]),\n          required: true,\n          className: \"w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: \"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700\",\n          children: loading ? \"Uploading...\" : \"Upload Prescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"mW/oTaNcRoxh8mAhMqVzLErxdC4=\", false, function () {\n  return [useUserStore];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","uploadPrescription","useUserStore","jsxDEV","_jsxDEV","Upload","_s","user","form","setForm","patientId","diagnosis","file","setFile","loading","setLoading","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","alert","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","rows","type","accept","files","disabled","_c","$RefreshReg$"],"sources":["D:/medsync/medisync-frontend/src/pages/upload_page.js"],"sourcesContent":["// // File: src/pages/Upload.js\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useUserStore } from \"../store/user_store\";\n\n// const Upload = () => {\n//   const { user } = useUserStore();\n//   const [form, setForm] = useState({ patientId: \"\", diagnosis: \"\" });\n//   const [file, setFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setForm((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!file) return alert(\"Please attach a file.\");\n\n//     const formData = new FormData();\n//     formData.append(\"patientId\", form.patientId);\n//     formData.append(\"diagnosis\", form.diagnosis);\n//     formData.append(\"doctorId\", user.id);\n//     formData.append(\"file\", file);\n\n//     setLoading(true);\n//     try {\n//       await axios.post(\"/api/upload/prescription\", formData);\n//       alert(\"Prescription uploaded successfully.\");\n//       setForm({ patientId: \"\", diagnosis: \"\" });\n//       setFile(null);\n//     } catch (err) {\n//       alert(\"Upload failed. Try again.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 py-10 px-6\">\n//       <div className=\"max-w-2xl mx-auto bg-white p-6 rounded shadow\">\n//         <h2 className=\"text-2xl font-semibold mb-6\">Upload Prescription</h2>\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\n//           <input\n//             name=\"patientId\"\n//             value={form.patientId}\n//             onChange={handleChange}\n//             placeholder=\"Patient ID\"\n//             required\n//             className=\"w-full px-4 py-2 border rounded\"\n//           />\n//           <textarea\n//             name=\"diagnosis\"\n//             value={form.diagnosis}\n//             onChange={handleChange}\n//             placeholder=\"Diagnosis Summary\"\n//             required\n//             rows={3}\n//             className=\"w-full px-4 py-2 border rounded\"\n//           />\n//           <input\n//             type=\"file\"\n//             accept=\"application/pdf,image/*\"\n//             onChange={(e) => setFile(e.target.files[0])}\n//             required\n//             className=\"w-full\"\n//           />\n//           <button\n//             type=\"submit\"\n//             disabled={loading}\n//             className=\"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700\"\n//           >\n//             {loading ? \"Uploading...\" : \"Upload Prescription\"}\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Upload;\n\n\n// mock use \n// File: src/pages/Upload.js\nimport React, { useState } from \"react\";\nimport { uploadPrescription } from \"../services/mockApi\";\nimport { useUserStore } from \"../store/user_store\";\n\nconst Upload = () => {\n  const { user } = useUserStore();\n  const [form, setForm] = useState({ patientId: \"\", diagnosis: \"\" });\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!file) return alert(\"Please attach a file.\");\n\n    setLoading(true);\n    try {\n      // Mock API ignores actual formData\n      await uploadPrescription();\n      alert(\"Prescription uploaded successfully.\");\n      setForm({ patientId: \"\", diagnosis: \"\" });\n      setFile(null);\n    } catch (err) {\n      alert(\"Upload failed. Try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 py-10 px-6\">\n      <div className=\"max-w-2xl mx-auto bg-white p-6 rounded shadow\">\n        <h2 className=\"text-2xl font-semibold mb-6\">Upload Prescription</h2>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <input\n            name=\"patientId\"\n            value={form.patientId}\n            onChange={handleChange}\n            placeholder=\"Patient ID\"\n            required\n            className=\"w-full px-4 py-2 border rounded\"\n          />\n          <textarea\n            name=\"diagnosis\"\n            value={form.diagnosis}\n            onChange={handleChange}\n            placeholder=\"Diagnosis Summary\"\n            required\n            rows={3}\n            className=\"w-full px-4 py-2 border rounded\"\n          />\n          <input\n            type=\"file\"\n            accept=\"application/pdf,image/*\"\n            onChange={(e) => setFile(e.target.files[0])}\n            required\n            className=\"w-full\"\n          />\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700\"\n          >\n            {loading ? \"Uploading...\" : \"Upload Prescription\"}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Upload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}