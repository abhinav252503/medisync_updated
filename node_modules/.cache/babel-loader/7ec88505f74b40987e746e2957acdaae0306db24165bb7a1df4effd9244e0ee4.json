{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Dialog, Tab } from \"@headlessui/react\";\n// import { useNavigate } from \"react-router-dom\";\n// import PatientStepIndicator from \"../../components/patient/PatientStepIndicator\";\n// import FancyButton from \"../../components/FancyButton\";\n// import { sendOtp, verifyOtp, registerPatient, verifySignupOtp } from \"../../services/mockApi\";\n// import { useUserStore } from \"../../store/user_store\";\n\n// export default function PatientAuthModal() {\n//   const nav = useNavigate();\n//   const setUser = useUserStore((s) => s.setUser);\n\n//   const [open, setOpen] = useState(true);\n//   const [tabIndex, setTabIndex] = useState(0);\n//   const [signupData, setSignupData] = useState({\n//     name:\"\", age:\"\", sex:\"\", weight:\"\", height:\"\", allergies:\"\", chronic:\"\", phone:\"\", password:\"\"\n//   });\n//   const [loginPhone, setLoginPhone] = useState(\"\");\n//   const [otp, setOtp] = useState(\"\");\n//   const [step, setStep] = useState(1);\n//   const [loading, setLoading] = useState(false);\n\n//   const closeAndGoto = (user) => {\n//     setUser(user);\n//     setOpen(false);\n//     nav(\"/dashboard\");\n//   };\n\n//   const onSignup = async () => {\n//     if (step===1) {\n//       setLoading(true);\n//       await registerPatient(signupData);\n//       setStep(2);\n//       setLoading(false);\n//     } else {\n//       setLoading(true);\n//       const user = await verifySignupOtp(signupData.phone, otp);\n//       closeAndGoto(user);\n//     }\n//   };\n\n//   const onLogin = async () => {\n//     if (step===1) {\n//       setLoading(true);\n//       await sendOtp(loginPhone);\n//       setStep(2);\n//       setLoading(false);\n//     } else {\n//       setLoading(true);\n//       const user = await verifyOtp(loginPhone, otp);\n//       closeAndGoto(user);\n//     }\n//   };\n\n//   return (\n//     <Dialog open={open} onClose={() => {}} className=\"fixed inset-0 z-50\">\n//       <div className=\"fixed inset-0 bg-black bg-opacity-30\"/>\n//       <div className=\"flex items-center justify-center min-h-screen p-4\">\n//         <Dialog.Panel className=\"w-full max-w-md bg-white rounded-2xl shadow-lg p-6\">\n//           <Tab.Group selectedIndex={tabIndex} onChange={(i)=>{setTabIndex(i); setStep(1); setOtp(\"\");}}>\n//             <Tab.List className=\"flex space-x-4 mb-6\">\n//               {[\"Login\",\"Sign Up\"].map((t)=>\n//                 <Tab key={t} className={({selected})=>\n//                   `flex-1 py-2 text-center rounded-lg ${selected?\"bg-blue-600 text-white\":\"bg-gray-100\"}`\n//                 }>\n//                   {t}\n//                 </Tab>\n//               )}\n//             </Tab.List>\n\n//             <PatientStepIndicator current={step}/>\n\n//             <Tab.Panels>\n//               {/* Login */}\n//               <Tab.Panel>\n//                 {step===1 ? (\n//                   <>\n//                     <input\n//                       value={loginPhone}\n//                       onChange={(e)=>setLoginPhone(e.target.value)}\n//                       placeholder=\"Phone or Patient ID\"\n//                       className=\"w-full mb-4 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-300\"\n//                     />\n//                     <FancyButton loading={loading} onClick={onLogin}>Send OTP</FancyButton>\n//                   </>\n//                 ) : (\n//                   <>\n//                     <input\n//                       value={otp}\n//                       onChange={(e)=>setOtp(e.target.value)}\n//                       placeholder=\"Enter OTP\"\n//                       className=\"w-full mb-4 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-300\"\n//                     />\n//                     <FancyButton loading={loading} onClick={onLogin}>Login</FancyButton>\n//                   </>\n//                 )}\n//               </Tab.Panel>\n\n//               {/* Sign-Up */}\n//               <Tab.Panel>\n//                 {step===1 ? (\n//                   <>\n//                     {[\n//                       [\"name\",\"Name\"],\n//                       [\"age\",\"Age\"],\n//                       [\"sex\",\"Sex\"],\n//                       [\"weight\",\"Weight\"],\n//                       [\"height\",\"Height\"],\n//                       [\"allergies\",\"Allergies (opt)\"],\n//                       [\"chronic\",\"Chronic Illness (opt)\"],\n//                       [\"phone\",\"Phone Number\"],\n//                       [\"password\",\"Password\"]\n//                     ].map(([key,pl])=>(\n//                       <input\n//                         key={key}\n//                         type={key===\"password\"?\"password\":\"text\"}\n//                         value={signupData[key]}\n//                         onChange={e=>setSignupData({...signupData,[key]:e.target.value})}\n//                         placeholder={pl}\n//                         className=\"w-full mb-3 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-300\"\n//                       />\n//                     ))}\n//                     <FancyButton loading={loading} onClick={onSignup}>Register</FancyButton>\n//                   </>\n//                 ) : (\n//                   <>\n//                     <input\n//                       value={otp}\n//                       onChange={e=>setOtp(e.target.value)}\n//                       placeholder=\"Enter OTP\"\n//                       className=\"w-full mb-4 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-300\"\n//                     />\n//                     <FancyButton loading={loading} onClick={onSignup}>Verify & Continue</FancyButton>\n//                   </>\n//                 )}\n//               </Tab.Panel>\n//             </Tab.Panels>\n//           </Tab.Group>\n//         </Dialog.Panel>\n//       </div>\n//     </Dialog>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/medsync/medisync-frontend/src/pages/patient/PatientAuthModal.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Dialog, Tab } from \"@headlessui/react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import PatientStepIndicator from \"../../components/patient/PatientStepIndicator\";\r\n// import FancyButton from \"../../components/FancyButton\";\r\n// import { sendOtp, verifyOtp, registerPatient, verifySignupOtp } from \"../../services/mockApi\";\r\n// import { useUserStore } from \"../../store/user_store\";\r\n\r\n// export default function PatientAuthModal() {\r\n//   const nav = useNavigate();\r\n//   const setUser = useUserStore((s) => s.setUser);\r\n\r\n//   const [open, setOpen] = useState(true);\r\n//   const [tabIndex, setTabIndex] = useState(0);\r\n//   const [signupData, setSignupData] = useState({\r\n//     name:\"\", age:\"\", sex:\"\", weight:\"\", height:\"\", allergies:\"\", chronic:\"\", phone:\"\", password:\"\"\r\n//   });\r\n//   const [loginPhone, setLoginPhone] = useState(\"\");\r\n//   const [otp, setOtp] = useState(\"\");\r\n//   const [step, setStep] = useState(1);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const closeAndGoto = (user) => {\r\n//     setUser(user);\r\n//     setOpen(false);\r\n//     nav(\"/dashboard\");\r\n//   };\r\n\r\n//   const onSignup = async () => {\r\n//     if (step===1) {\r\n//       setLoading(true);\r\n//       await registerPatient(signupData);\r\n//       setStep(2);\r\n//       setLoading(false);\r\n//     } else {\r\n//       setLoading(true);\r\n//       const user = await verifySignupOtp(signupData.phone, otp);\r\n//       closeAndGoto(user);\r\n//     }\r\n//   };\r\n\r\n//   const onLogin = async () => {\r\n//     if (step===1) {\r\n//       setLoading(true);\r\n//       await sendOtp(loginPhone);\r\n//       setStep(2);\r\n//       setLoading(false);\r\n//     } else {\r\n//       setLoading(true);\r\n//       const user = await verifyOtp(loginPhone, otp);\r\n//       closeAndGoto(user);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Dialog open={open} onClose={() => {}} className=\"fixed inset-0 z-50\">\r\n//       <div className=\"fixed inset-0 bg-black bg-opacity-30\"/>\r\n//       <div className=\"flex items-center justify-center min-h-screen p-4\">\r\n//         <Dialog.Panel className=\"w-full max-w-md bg-white rounded-2xl shadow-lg p-6\">\r\n//           <Tab.Group selectedIndex={tabIndex} onChange={(i)=>{setTabIndex(i); setStep(1); setOtp(\"\");}}>\r\n//             <Tab.List className=\"flex space-x-4 mb-6\">\r\n//               {[\"Login\",\"Sign Up\"].map((t)=>\r\n//                 <Tab key={t} className={({selected})=>\r\n//                   `flex-1 py-2 text-center rounded-lg ${selected?\"bg-blue-600 text-white\":\"bg-gray-100\"}`\r\n//                 }>\r\n//                   {t}\r\n//                 </Tab>\r\n//               )}\r\n//             </Tab.List>\r\n\r\n//             <PatientStepIndicator current={step}/>\r\n\r\n//             <Tab.Panels>\r\n//               {/* Login */}\r\n//               <Tab.Panel>\r\n//                 {step===1 ? (\r\n//                   <>\r\n//                     <input\r\n//                       value={loginPhone}\r\n//                       onChange={(e)=>setLoginPhone(e.target.value)}\r\n//                       placeholder=\"Phone or Patient ID\"\r\n//                       className=\"w-full mb-4 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-300\"\r\n//                     />\r\n//                     <FancyButton loading={loading} onClick={onLogin}>Send OTP</FancyButton>\r\n//                   </>\r\n//                 ) : (\r\n//                   <>\r\n//                     <input\r\n//                       value={otp}\r\n//                       onChange={(e)=>setOtp(e.target.value)}\r\n//                       placeholder=\"Enter OTP\"\r\n//                       className=\"w-full mb-4 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-300\"\r\n//                     />\r\n//                     <FancyButton loading={loading} onClick={onLogin}>Login</FancyButton>\r\n//                   </>\r\n//                 )}\r\n//               </Tab.Panel>\r\n\r\n//               {/* Sign-Up */}\r\n//               <Tab.Panel>\r\n//                 {step===1 ? (\r\n//                   <>\r\n//                     {[\r\n//                       [\"name\",\"Name\"],\r\n//                       [\"age\",\"Age\"],\r\n//                       [\"sex\",\"Sex\"],\r\n//                       [\"weight\",\"Weight\"],\r\n//                       [\"height\",\"Height\"],\r\n//                       [\"allergies\",\"Allergies (opt)\"],\r\n//                       [\"chronic\",\"Chronic Illness (opt)\"],\r\n//                       [\"phone\",\"Phone Number\"],\r\n//                       [\"password\",\"Password\"]\r\n//                     ].map(([key,pl])=>(\r\n//                       <input\r\n//                         key={key}\r\n//                         type={key===\"password\"?\"password\":\"text\"}\r\n//                         value={signupData[key]}\r\n//                         onChange={e=>setSignupData({...signupData,[key]:e.target.value})}\r\n//                         placeholder={pl}\r\n//                         className=\"w-full mb-3 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-300\"\r\n//                       />\r\n//                     ))}\r\n//                     <FancyButton loading={loading} onClick={onSignup}>Register</FancyButton>\r\n//                   </>\r\n//                 ) : (\r\n//                   <>\r\n//                     <input\r\n//                       value={otp}\r\n//                       onChange={e=>setOtp(e.target.value)}\r\n//                       placeholder=\"Enter OTP\"\r\n//                       className=\"w-full mb-4 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-300\"\r\n//                     />\r\n//                     <FancyButton loading={loading} onClick={onSignup}>Verify & Continue</FancyButton>\r\n//                   </>\r\n//                 )}\r\n//               </Tab.Panel>\r\n//             </Tab.Panels>\r\n//           </Tab.Group>\r\n//         </Dialog.Panel>\r\n//       </div>\r\n//     </Dialog>\r\n//   );\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}