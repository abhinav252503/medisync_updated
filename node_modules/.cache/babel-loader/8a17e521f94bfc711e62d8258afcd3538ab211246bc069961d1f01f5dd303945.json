{"ast":null,"code":"var _jsxFileName = \"D:\\\\medsync\\\\medisync-frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// simple guard using user_store\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useUserStore } from \"../store/user_store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children\n}) {\n  _s();\n  const user = useUserStore(s => s.user);\n  if (!user) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/patient/modal\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 21\n  }, this);\n  return children;\n}\n_s(ProtectedRoute, \"GjyauE9wsua0WRoaX1Mya1V1E0Q=\", false, function () {\n  return [useUserStore];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useUserStore","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","s","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/medsync/medisync-frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// simple guard using user_store\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useUserStore } from \"../store/user_store\";\n\nexport default function ProtectedRoute({ children }) {\n  const user = useUserStore((s) => s.user);\n  if (!user) return <Navigate to=\"/patient/modal\" replace />;\n  return children;\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAMC,IAAI,GAAGN,YAAY,CAAEO,CAAC,IAAKA,CAAC,CAACD,IAAI,CAAC;EACxC,IAAI,CAACA,IAAI,EAAE,oBAAOJ,OAAA,CAACH,QAAQ;IAACS,EAAE,EAAC,gBAAgB;IAACC,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC1D,OAAOT,QAAQ;AACjB;AAACC,EAAA,CAJuBF,cAAc;EAAA,QACvBH,YAAY;AAAA;AAAAc,EAAA,GADHX,cAAc;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}