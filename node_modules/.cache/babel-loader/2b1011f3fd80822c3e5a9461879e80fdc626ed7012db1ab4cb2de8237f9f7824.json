{"ast":null,"code":"var _jsxFileName = \"D:\\\\medsync\\\\medisync-frontend\\\\src\\\\pages\\\\emergency_page.js\",\n  _s = $RefreshSig$();\n// // File: src/pages/Emergency.js\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// const Emergency = () => {\n//   const [location, setLocation] = useState(null);\n//   const [hospitals, setHospitals] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     navigator.geolocation.getCurrentPosition(\n//       async (pos) => {\n//         const { latitude, longitude } = pos.coords;\n//         setLocation({ latitude, longitude });\n\n//         try {\n//           const res = await axios.get(\n//             `/api/emergency/hospitals?lat=${latitude}&lng=${longitude}`\n//           );\n//           setHospitals(res.data.hospitals);\n//         } catch (err) {\n//           alert(\"Failed to load hospital list\");\n//         } finally {\n//           setLoading(false);\n//         }\n//       },\n//       () => {\n//         alert(\"Location access is required to find emergency help.\");\n//         setLoading(false);\n//       }\n//     );\n//   }, []);\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 p-6\">\n//       <div className=\"max-w-3xl mx-auto bg-white rounded shadow p-6\">\n//         <h2 className=\"text-2xl font-semibold mb-4\">Emergency Support</h2>\n\n//         {loading ? (\n//           <p>Locating nearest hospitals...</p>\n//         ) : hospitals.length === 0 ? (\n//           <p>No hospitals found near your location.</p>\n//         ) : (\n//           <ul className=\"space-y-4\">\n//             {hospitals.map((hospital, idx) => (\n//               <li key={idx} className=\"border p-4 rounded bg-gray-50\">\n//                 <p className=\"font-semibold\">{hospital.name}</p>\n//                 <p className=\"text-sm text-gray-600\">{hospital.address}</p>\n//                 <a\n//                   href={`tel:${hospital.phone}`}\n//                   className=\"text-red-600 font-semibold underline\"\n//                 >\n//                   Call: {hospital.phone}\n//                 </a>\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Emergency;\n\n// mock api use\n// File: src/pages/Emergency.js\nimport React, { useEffect, useState } from \"react\";\nimport { getHospitals } from \"../services/mockApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Emergency = () => {\n  _s();\n  const [location, setLocation] = useState(null);\n  const [hospitals, setHospitals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async pos => {\n      const {\n        latitude,\n        longitude\n      } = pos.coords;\n      setLocation({\n        latitude,\n        longitude\n      });\n      try {\n        const res = await getHospitals();\n        setHospitals(res.hospitals);\n      } catch (err) {\n        alert(\"Failed to load hospital list\");\n      } finally {\n        setLoading(false);\n      }\n    }, () => {\n      alert(\"Location access is required to find emergency help.\");\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto bg-white rounded shadow p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Emergency Support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Locating nearest hospitals...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : hospitals.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hospitals found near your location.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-4\",\n        children: hospitals.map((hospital, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"border p-4 rounded bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold\",\n            children: hospital.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: hospital.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `tel:${hospital.phone}`,\n            className: \"text-red-600 font-semibold underline\",\n            children: [\"Call: \", hospital.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Emergency, \"IZ+24679wIpo+bMfALdizLZXx/E=\");\n_c = Emergency;\nexport default Emergency;\nvar _c;\n$RefreshReg$(_c, \"Emergency\");","map":{"version":3,"names":["React","useEffect","useState","getHospitals","jsxDEV","_jsxDEV","Emergency","_s","location","setLocation","hospitals","setHospitals","loading","setLoading","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","coords","res","err","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","hospital","idx","name","address","href","phone","_c","$RefreshReg$"],"sources":["D:/medsync/medisync-frontend/src/pages/emergency_page.js"],"sourcesContent":["// // File: src/pages/Emergency.js\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// const Emergency = () => {\n//   const [location, setLocation] = useState(null);\n//   const [hospitals, setHospitals] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     navigator.geolocation.getCurrentPosition(\n//       async (pos) => {\n//         const { latitude, longitude } = pos.coords;\n//         setLocation({ latitude, longitude });\n\n//         try {\n//           const res = await axios.get(\n//             `/api/emergency/hospitals?lat=${latitude}&lng=${longitude}`\n//           );\n//           setHospitals(res.data.hospitals);\n//         } catch (err) {\n//           alert(\"Failed to load hospital list\");\n//         } finally {\n//           setLoading(false);\n//         }\n//       },\n//       () => {\n//         alert(\"Location access is required to find emergency help.\");\n//         setLoading(false);\n//       }\n//     );\n//   }, []);\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 p-6\">\n//       <div className=\"max-w-3xl mx-auto bg-white rounded shadow p-6\">\n//         <h2 className=\"text-2xl font-semibold mb-4\">Emergency Support</h2>\n\n//         {loading ? (\n//           <p>Locating nearest hospitals...</p>\n//         ) : hospitals.length === 0 ? (\n//           <p>No hospitals found near your location.</p>\n//         ) : (\n//           <ul className=\"space-y-4\">\n//             {hospitals.map((hospital, idx) => (\n//               <li key={idx} className=\"border p-4 rounded bg-gray-50\">\n//                 <p className=\"font-semibold\">{hospital.name}</p>\n//                 <p className=\"text-sm text-gray-600\">{hospital.address}</p>\n//                 <a\n//                   href={`tel:${hospital.phone}`}\n//                   className=\"text-red-600 font-semibold underline\"\n//                 >\n//                   Call: {hospital.phone}\n//                 </a>\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Emergency;\n\n\n// mock api use\n// File: src/pages/Emergency.js\nimport React, { useEffect, useState } from \"react\";\nimport { getHospitals } from \"../services/mockApi\";\n\nconst Emergency = () => {\n  const [location, setLocation] = useState(null);\n  const [hospitals, setHospitals] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      async (pos) => {\n        const { latitude, longitude } = pos.coords;\n        setLocation({ latitude, longitude });\n\n        try {\n          const res = await getHospitals();\n          setHospitals(res.hospitals);\n        } catch (err) {\n          alert(\"Failed to load hospital list\");\n        } finally {\n          setLoading(false);\n        }\n      },\n      () => {\n        alert(\"Location access is required to find emergency help.\");\n        setLoading(false);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6\">\n      <div className=\"max-w-3xl mx-auto bg-white rounded shadow p-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Emergency Support</h2>\n\n        {loading ? (\n          <p>Locating nearest hospitals...</p>\n        ) : hospitals.length === 0 ? (\n          <p>No hospitals found near your location.</p>\n        ) : (\n          <ul className=\"space-y-4\">\n            {hospitals.map((hospital, idx) => (\n              <li key={idx} className=\"border p-4 rounded bg-gray-50\">\n                <p className=\"font-semibold\">{hospital.name}</p>\n                <p className=\"text-sm text-gray-600\">{hospital.address}</p>\n                <a\n                  href={`tel:${hospital.phone}`}\n                  className=\"text-red-600 font-semibold underline\"\n                >\n                  Call: {hospital.phone}\n                </a>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Emergency;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}